Terminals unused in grammar

    ERROR


Rules useless in parser due to conflicts

   13 feature: error ';'


State 20 conflicts: 3 reduce/reduce
State 106 conflicts: 9 shift/reduce
State 115 conflicts: 2 reduce/reduce
State 134 conflicts: 9 shift/reduce
State 146 conflicts: 9 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class

    4 class: CLASS TYPEID '{' feature_list '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';'
    6      | CLASS error ';'

    7 feature_list: %empty
    8             | feature_list feature
    9             | feature_list error ';'

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}' ';'
   11        | OBJECTID ':' TYPEID ';'
   12        | OBJECTID ':' TYPEID ASSIGN expr ';'
   13        | error ';'

   14 formal_list: %empty
   15            | formal
   16            | formal_list ',' formal
   17            | error ','

   18 formal: OBJECTID ':' TYPEID

   19 expr_list_semicolon: %empty
   20                    | expr
   21                    | expr_list_semicolon ';' expr
   22                    | expr_list_semicolon ';' error

   23 expr_list_comma: %empty
   24                | expr
   25                | expr_list_comma ',' expr

   26 expr: OBJECTID ASSIGN expr
   27     | expr '.' OBJECTID '(' expr_list_comma ')'
   28     | expr '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   29     | OBJECTID '(' expr_list_comma ')'
   30     | IF expr THEN expr ELSE expr FI
   31     | WHILE expr LOOP expr POOL
   32     | '{' expr_list_semicolon '}'
   33     | let_expr
   34     | CASE expr OF case_list ESAC
   35     | NEW TYPEID
   36     | ISVOID expr
   37     | expr '+' expr
   38     | expr '-' expr
   39     | expr '*' expr
   40     | expr '/' expr
   41     | '~' expr
   42     | expr '<' expr
   43     | expr LE expr
   44     | expr '=' expr
   45     | NOT expr
   46     | '(' expr ')'
   47     | OBJECTID
   48     | INT_CONST
   49     | STR_CONST
   50     | BOOL_CONST
   51     | error

   52 case_list: case_branch
   53          | case_list case_branch
   54          | case_list error ';'

   55 case_branch: OBJECTID ':' TYPEID DARROW expr ';'

   56 let_expr: LET OBJECTID ':' TYPEID IN expr
   57         | LET OBJECTID ':' TYPEID ASSIGN expr IN expr
   58         | LET OBJECTID ':' TYPEID ',' let_expr
   59         | LET OBJECTID ':' TYPEID ASSIGN expr ',' let_expr
   60         | LET error IN expr
   61         | LET error ',' let_expr


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 10 27 28 29 46
    ')' (41) 10 27 28 29 46
    '*' (42) 39
    '+' (43) 37
    ',' (44) 16 17 25 58 59 61
    '-' (45) 38
    '.' (46) 27 28
    '/' (47) 40
    ':' (58) 10 11 12 18 55 56 57 58 59
    ';' (59) 4 5 6 9 10 11 12 13 21 22 54 55
    '<' (60) 42
    '=' (61) 44
    '@' (64) 28
    '{' (123) 4 5 10 32
    '}' (125) 4 5 10 32
    '~' (126) 41
    error (256) 6 9 13 17 22 51 54 60 61
    CLASS (258) 4 5 6
    ELSE (259) 30
    FI (260) 30
    IF (261) 30
    IN (262) 56 57 60
    INHERITS (263) 5
    LET (264) 56 57 58 59 60 61
    LOOP (265) 31
    POOL (266) 31
    THEN (267) 30
    WHILE (268) 31
    CASE (269) 34
    ESAC (270) 34
    OF (271) 34
    DARROW (272) 55
    NEW (273) 35
    ISVOID (274) 36
    STR_CONST <symbol> (275) 49
    INT_CONST <symbol> (276) 48
    BOOL_CONST <boolean> (277) 50
    TYPEID <symbol> (278) 4 5 10 11 12 18 28 35 55 56 57 58 59
    OBJECTID <symbol> (279) 10 11 12 18 26 27 28 29 47 55 56 57 58 59
    ASSIGN (280) 12 26 57 59
    NOT (281) 45
    LE (282) 43
    ERROR (283)


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    program <program> (46)
        on left: 1
        on right: 0
    class_list <classes> (47)
        on left: 2 3
        on right: 1 3
    class <class_> (48)
        on left: 4 5 6
        on right: 2 3
    feature_list <features> (49)
        on left: 7 8 9
        on right: 4 5 8 9
    feature <feature> (50)
        on left: 10 11 12 13
        on right: 8
    formal_list <formals> (51)
        on left: 14 15 16 17
        on right: 10 16
    formal <formal> (52)
        on left: 18
        on right: 15 16
    expr_list_semicolon <expressions> (53)
        on left: 19 20 21 22
        on right: 21 22 32
    expr_list_comma <expressions> (54)
        on left: 23 24 25
        on right: 25 27 28 29
    expr <expression> (55)
        on left: 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51
        on right: 10 12 20 21 24 25 26 27 28 30 31 34 36 37 38 39 40 41 42 43 44 45 46 55 56 57 59 60
    case_list <cases> (56)
        on left: 52 53 54
        on right: 34 53 54
    case_branch <case_> (57)
        on left: 55
        on right: 52 53
    let_expr <expression> (58)
        on left: 56 57 58 59 60 61
        on right: 33 58 59 61


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


State 1

    4 class: CLASS . TYPEID '{' feature_list '}' ';'
    5      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}' ';'
    6      | CLASS . error ';'

    error   shift, and go to state 5
    TYPEID  shift, and go to state 6


State 2

    0 $accept: program . $end

    $end  shift, and go to state 7


State 3

    1 program: class_list .
    3 class_list: class_list . class

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 8


State 4

    2 class_list: class .

    $default  reduce using rule 2 (class_list)


State 5

    6 class: CLASS error . ';'

    ';'  shift, and go to state 9


State 6

    4 class: CLASS TYPEID . '{' feature_list '}' ';'
    5      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}' ';'

    INHERITS  shift, and go to state 10
    '{'       shift, and go to state 11


State 7

    0 $accept: program $end .

    $default  accept


State 8

    3 class_list: class_list class .

    $default  reduce using rule 3 (class_list)


State 9

    6 class: CLASS error ';' .

    $default  reduce using rule 6 (class)


State 10

    5 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 12


State 11

    4 class: CLASS TYPEID '{' . feature_list '}' ';'

    $default  reduce using rule 7 (feature_list)

    feature_list  go to state 13


State 12

    5 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}' ';'

    '{'  shift, and go to state 14


State 13

    4 class: CLASS TYPEID '{' feature_list . '}' ';'
    8 feature_list: feature_list . feature
    9             | feature_list . error ';'

    error     shift, and go to state 15
    OBJECTID  shift, and go to state 16
    '}'       shift, and go to state 17

    feature  go to state 18


State 14

    5 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}' ';'

    $default  reduce using rule 7 (feature_list)

    feature_list  go to state 19


State 15

    9 feature_list: feature_list error . ';'
   13 feature: error . ';'

    ';'  shift, and go to state 20


State 16

   10 feature: OBJECTID . '(' formal_list ')' ':' TYPEID '{' expr '}' ';'
   11        | OBJECTID . ':' TYPEID ';'
   12        | OBJECTID . ':' TYPEID ASSIGN expr ';'

    '('  shift, and go to state 21
    ':'  shift, and go to state 22


State 17

    4 class: CLASS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 23


State 18

    8 feature_list: feature_list feature .

    $default  reduce using rule 8 (feature_list)


State 19

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}' ';'
    8 feature_list: feature_list . feature
    9             | feature_list . error ';'

    error     shift, and go to state 15
    OBJECTID  shift, and go to state 16
    '}'       shift, and go to state 24

    feature  go to state 18


State 20

    9 feature_list: feature_list error ';' .
   13 feature: error ';' .

    error     reduce using rule 9 (feature_list)
    error     [reduce using rule 13 (feature)]
    OBJECTID  reduce using rule 9 (feature_list)
    OBJECTID  [reduce using rule 13 (feature)]
    '}'       reduce using rule 9 (feature_list)
    '}'       [reduce using rule 13 (feature)]
    $default  reduce using rule 9 (feature_list)


State 21

   10 feature: OBJECTID '(' . formal_list ')' ':' TYPEID '{' expr '}' ';'

    error     shift, and go to state 25
    OBJECTID  shift, and go to state 26

    ')'  reduce using rule 14 (formal_list)
    ','  reduce using rule 14 (formal_list)

    formal_list  go to state 27
    formal       go to state 28


State 22

   11 feature: OBJECTID ':' . TYPEID ';'
   12        | OBJECTID ':' . TYPEID ASSIGN expr ';'

    TYPEID  shift, and go to state 29


State 23

    4 class: CLASS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 4 (class)


State 24

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 30


State 25

   17 formal_list: error . ','

    ','  shift, and go to state 31


State 26

   18 formal: OBJECTID . ':' TYPEID

    ':'  shift, and go to state 32


State 27

   10 feature: OBJECTID '(' formal_list . ')' ':' TYPEID '{' expr '}' ';'
   16 formal_list: formal_list . ',' formal

    ')'  shift, and go to state 33
    ','  shift, and go to state 34


State 28

   15 formal_list: formal .

    $default  reduce using rule 15 (formal_list)


State 29

   11 feature: OBJECTID ':' TYPEID . ';'
   12        | OBJECTID ':' TYPEID . ASSIGN expr ';'

    ASSIGN  shift, and go to state 35
    ';'     shift, and go to state 36


State 30

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 5 (class)


State 31

   17 formal_list: error ',' .

    $default  reduce using rule 17 (formal_list)


State 32

   18 formal: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 37


State 33

   10 feature: OBJECTID '(' formal_list ')' . ':' TYPEID '{' expr '}' ';'

    ':'  shift, and go to state 38


State 34

   16 formal_list: formal_list ',' . formal

    OBJECTID  shift, and go to state 26

    formal  go to state 39


State 35

   12 feature: OBJECTID ':' TYPEID ASSIGN . expr ';'

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expr      go to state 55
    let_expr  go to state 56


State 36

   11 feature: OBJECTID ':' TYPEID ';' .

    $default  reduce using rule 11 (feature)


State 37

   18 formal: OBJECTID ':' TYPEID .

    $default  reduce using rule 18 (formal)


State 38

   10 feature: OBJECTID '(' formal_list ')' ':' . TYPEID '{' expr '}' ';'

    TYPEID  shift, and go to state 57


State 39

   16 formal_list: formal_list ',' formal .

    $default  reduce using rule 16 (formal_list)


State 40

   51 expr: error .

    $default  reduce using rule 51 (expr)


State 41

   30 expr: IF . expr THEN expr ELSE expr FI

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expr      go to state 58
    let_expr  go to state 56


State 42

   56 let_expr: LET . OBJECTID ':' TYPEID IN expr
   57         | LET . OBJECTID ':' TYPEID ASSIGN expr IN expr
   58         | LET . OBJECTID ':' TYPEID ',' let_expr
   59         | LET . OBJECTID ':' TYPEID ASSIGN expr ',' let_expr
   60         | LET . error IN expr
   61         | LET . error ',' let_expr

    error     shift, and go to state 59
    OBJECTID  shift, and go to state 60


State 43

   31 expr: WHILE . expr LOOP expr POOL

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expr      go to state 61
    let_expr  go to state 56


State 44

   34 expr: CASE . expr OF case_list ESAC

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expr      go to state 62
    let_expr  go to state 56


State 45

   35 expr: NEW . TYPEID

    TYPEID  shift, and go to state 63


State 46

   36 expr: ISVOID . expr

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expr      go to state 64
    let_expr  go to state 56


State 47

   49 expr: STR_CONST .

    $default  reduce using rule 49 (expr)


State 48

   48 expr: INT_CONST .

    $default  reduce using rule 48 (expr)


State 49

   50 expr: BOOL_CONST .

    $default  reduce using rule 50 (expr)


State 50

   26 expr: OBJECTID . ASSIGN expr
   29     | OBJECTID . '(' expr_list_comma ')'
   47     | OBJECTID .

    ASSIGN  shift, and go to state 65
    '('     shift, and go to state 66

    $default  reduce using rule 47 (expr)


State 51

   45 expr: NOT . expr

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expr      go to state 67
    let_expr  go to state 56


State 52

   41 expr: '~' . expr

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expr      go to state 68
    let_expr  go to state 56


State 53

   32 expr: '{' . expr_list_semicolon '}'

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    '}'  reduce using rule 19 (expr_list_semicolon)
    ';'  reduce using rule 19 (expr_list_semicolon)

    expr_list_semicolon  go to state 69
    expr                 go to state 70
    let_expr             go to state 56


State 54

   46 expr: '(' . expr ')'

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expr      go to state 71
    let_expr  go to state 56


State 55

   12 feature: OBJECTID ':' TYPEID ASSIGN expr . ';'
   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    LE   shift, and go to state 72
    '<'  shift, and go to state 73
    '='  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '@'  shift, and go to state 79
    '.'  shift, and go to state 80
    ';'  shift, and go to state 81


State 56

   33 expr: let_expr .

    $default  reduce using rule 33 (expr)


State 57

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID . '{' expr '}' ';'

    '{'  shift, and go to state 82


State 58

   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   30     | IF expr . THEN expr ELSE expr FI
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    THEN  shift, and go to state 83
    LE    shift, and go to state 72
    '<'   shift, and go to state 73
    '='   shift, and go to state 74
    '+'   shift, and go to state 75
    '-'   shift, and go to state 76
    '*'   shift, and go to state 77
    '/'   shift, and go to state 78
    '@'   shift, and go to state 79
    '.'   shift, and go to state 80


State 59

   60 let_expr: LET error . IN expr
   61         | LET error . ',' let_expr

    IN   shift, and go to state 84
    ','  shift, and go to state 85


State 60

   56 let_expr: LET OBJECTID . ':' TYPEID IN expr
   57         | LET OBJECTID . ':' TYPEID ASSIGN expr IN expr
   58         | LET OBJECTID . ':' TYPEID ',' let_expr
   59         | LET OBJECTID . ':' TYPEID ASSIGN expr ',' let_expr

    ':'  shift, and go to state 86


State 61

   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   31     | WHILE expr . LOOP expr POOL
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    LOOP  shift, and go to state 87
    LE    shift, and go to state 72
    '<'   shift, and go to state 73
    '='   shift, and go to state 74
    '+'   shift, and go to state 75
    '-'   shift, and go to state 76
    '*'   shift, and go to state 77
    '/'   shift, and go to state 78
    '@'   shift, and go to state 79
    '.'   shift, and go to state 80


State 62

   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   34     | CASE expr . OF case_list ESAC
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    OF   shift, and go to state 88
    LE   shift, and go to state 72
    '<'  shift, and go to state 73
    '='  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '@'  shift, and go to state 79
    '.'  shift, and go to state 80


State 63

   35 expr: NEW TYPEID .

    $default  reduce using rule 35 (expr)


State 64

   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   36     | ISVOID expr .
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    '@'  shift, and go to state 79
    '.'  shift, and go to state 80

    $default  reduce using rule 36 (expr)


State 65

   26 expr: OBJECTID ASSIGN . expr

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expr      go to state 89
    let_expr  go to state 56


State 66

   29 expr: OBJECTID '(' . expr_list_comma ')'

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    ')'  reduce using rule 23 (expr_list_comma)
    ','  reduce using rule 23 (expr_list_comma)

    expr_list_comma  go to state 90
    expr             go to state 91
    let_expr         go to state 56


State 67

   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr
   45     | NOT expr .

    LE   shift, and go to state 72
    '<'  shift, and go to state 73
    '='  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '@'  shift, and go to state 79
    '.'  shift, and go to state 80

    $default  reduce using rule 45 (expr)


State 68

   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   41     | '~' expr .
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    '@'  shift, and go to state 79
    '.'  shift, and go to state 80

    $default  reduce using rule 41 (expr)


State 69

   21 expr_list_semicolon: expr_list_semicolon . ';' expr
   22                    | expr_list_semicolon . ';' error
   32 expr: '{' expr_list_semicolon . '}'

    '}'  shift, and go to state 92
    ';'  shift, and go to state 93


State 70

   20 expr_list_semicolon: expr .
   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    LE   shift, and go to state 72
    '<'  shift, and go to state 73
    '='  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '@'  shift, and go to state 79
    '.'  shift, and go to state 80

    $default  reduce using rule 20 (expr_list_semicolon)


State 71

   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr
   46     | '(' expr . ')'

    LE   shift, and go to state 72
    '<'  shift, and go to state 73
    '='  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '@'  shift, and go to state 79
    '.'  shift, and go to state 80
    ')'  shift, and go to state 94


State 72

   43 expr: expr LE . expr

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expr      go to state 95
    let_expr  go to state 56


State 73

   42 expr: expr '<' . expr

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expr      go to state 96
    let_expr  go to state 56


State 74

   44 expr: expr '=' . expr

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expr      go to state 97
    let_expr  go to state 56


State 75

   37 expr: expr '+' . expr

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expr      go to state 98
    let_expr  go to state 56


State 76

   38 expr: expr '-' . expr

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expr      go to state 99
    let_expr  go to state 56


State 77

   39 expr: expr '*' . expr

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expr      go to state 100
    let_expr  go to state 56


State 78

   40 expr: expr '/' . expr

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expr      go to state 101
    let_expr  go to state 56


State 79

   28 expr: expr '@' . TYPEID '.' OBJECTID '(' expr_list_comma ')'

    TYPEID  shift, and go to state 102


State 80

   27 expr: expr '.' . OBJECTID '(' expr_list_comma ')'

    OBJECTID  shift, and go to state 103


State 81

   12 feature: OBJECTID ':' TYPEID ASSIGN expr ';' .

    $default  reduce using rule 12 (feature)


State 82

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' . expr '}' ';'

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expr      go to state 104
    let_expr  go to state 56


State 83

   30 expr: IF expr THEN . expr ELSE expr FI

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expr      go to state 105
    let_expr  go to state 56


State 84

   60 let_expr: LET error IN . expr

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expr      go to state 106
    let_expr  go to state 56


State 85

   61 let_expr: LET error ',' . let_expr

    LET  shift, and go to state 42

    let_expr  go to state 107


State 86

   56 let_expr: LET OBJECTID ':' . TYPEID IN expr
   57         | LET OBJECTID ':' . TYPEID ASSIGN expr IN expr
   58         | LET OBJECTID ':' . TYPEID ',' let_expr
   59         | LET OBJECTID ':' . TYPEID ASSIGN expr ',' let_expr

    TYPEID  shift, and go to state 108


State 87

   31 expr: WHILE expr LOOP . expr POOL

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expr      go to state 109
    let_expr  go to state 56


State 88

   34 expr: CASE expr OF . case_list ESAC

    OBJECTID  shift, and go to state 110

    case_list    go to state 111
    case_branch  go to state 112


State 89

   26 expr: OBJECTID ASSIGN expr .
   27     | expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    LE   shift, and go to state 72
    '<'  shift, and go to state 73
    '='  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '@'  shift, and go to state 79
    '.'  shift, and go to state 80

    $default  reduce using rule 26 (expr)


State 90

   25 expr_list_comma: expr_list_comma . ',' expr
   29 expr: OBJECTID '(' expr_list_comma . ')'

    ')'  shift, and go to state 113
    ','  shift, and go to state 114


State 91

   24 expr_list_comma: expr .
   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    LE   shift, and go to state 72
    '<'  shift, and go to state 73
    '='  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '@'  shift, and go to state 79
    '.'  shift, and go to state 80

    $default  reduce using rule 24 (expr_list_comma)


State 92

   32 expr: '{' expr_list_semicolon '}' .

    $default  reduce using rule 32 (expr)


State 93

   21 expr_list_semicolon: expr_list_semicolon ';' . expr
   22                    | expr_list_semicolon ';' . error

    error       shift, and go to state 115
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expr      go to state 116
    let_expr  go to state 56


State 94

   46 expr: '(' expr ')' .

    $default  reduce using rule 46 (expr)


State 95

   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   43     | expr LE expr .
   44     | expr . '=' expr

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '@'  shift, and go to state 79
    '.'  shift, and go to state 80

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 43 (expr)


State 96

   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   42     | expr '<' expr .
   43     | expr . LE expr
   44     | expr . '=' expr

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '@'  shift, and go to state 79
    '.'  shift, and go to state 80

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 42 (expr)


State 97

   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr
   44     | expr '=' expr .

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '@'  shift, and go to state 79
    '.'  shift, and go to state 80

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 44 (expr)


State 98

   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   37     | expr . '+' expr
   37     | expr '+' expr .
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '@'  shift, and go to state 79
    '.'  shift, and go to state 80

    $default  reduce using rule 37 (expr)


State 99

   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   38     | expr '-' expr .
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '@'  shift, and go to state 79
    '.'  shift, and go to state 80

    $default  reduce using rule 38 (expr)


State 100

   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   39     | expr '*' expr .
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    '@'  shift, and go to state 79
    '.'  shift, and go to state 80

    $default  reduce using rule 39 (expr)


State 101

   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   40     | expr '/' expr .
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    '@'  shift, and go to state 79
    '.'  shift, and go to state 80

    $default  reduce using rule 40 (expr)


State 102

   28 expr: expr '@' TYPEID . '.' OBJECTID '(' expr_list_comma ')'

    '.'  shift, and go to state 117


State 103

   27 expr: expr '.' OBJECTID . '(' expr_list_comma ')'

    '('  shift, and go to state 118


State 104

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr . '}' ';'
   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    LE   shift, and go to state 72
    '<'  shift, and go to state 73
    '='  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '@'  shift, and go to state 79
    '.'  shift, and go to state 80
    '}'  shift, and go to state 119


State 105

   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   30     | IF expr THEN expr . ELSE expr FI
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    ELSE  shift, and go to state 120
    LE    shift, and go to state 72
    '<'   shift, and go to state 73
    '='   shift, and go to state 74
    '+'   shift, and go to state 75
    '-'   shift, and go to state 76
    '*'   shift, and go to state 77
    '/'   shift, and go to state 78
    '@'   shift, and go to state 79
    '.'   shift, and go to state 80


State 106

   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr
   60 let_expr: LET error IN expr .

    LE   shift, and go to state 72
    '<'  shift, and go to state 73
    '='  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '@'  shift, and go to state 79
    '.'  shift, and go to state 80

    LE        [reduce using rule 60 (let_expr)]
    '<'       [reduce using rule 60 (let_expr)]
    '='       [reduce using rule 60 (let_expr)]
    '+'       [reduce using rule 60 (let_expr)]
    '-'       [reduce using rule 60 (let_expr)]
    '*'       [reduce using rule 60 (let_expr)]
    '/'       [reduce using rule 60 (let_expr)]
    '@'       [reduce using rule 60 (let_expr)]
    '.'       [reduce using rule 60 (let_expr)]
    $default  reduce using rule 60 (let_expr)


State 107

   61 let_expr: LET error ',' let_expr .

    $default  reduce using rule 61 (let_expr)


State 108

   56 let_expr: LET OBJECTID ':' TYPEID . IN expr
   57         | LET OBJECTID ':' TYPEID . ASSIGN expr IN expr
   58         | LET OBJECTID ':' TYPEID . ',' let_expr
   59         | LET OBJECTID ':' TYPEID . ASSIGN expr ',' let_expr

    IN      shift, and go to state 121
    ASSIGN  shift, and go to state 122
    ','     shift, and go to state 123


State 109

   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   31     | WHILE expr LOOP expr . POOL
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    POOL  shift, and go to state 124
    LE    shift, and go to state 72
    '<'   shift, and go to state 73
    '='   shift, and go to state 74
    '+'   shift, and go to state 75
    '-'   shift, and go to state 76
    '*'   shift, and go to state 77
    '/'   shift, and go to state 78
    '@'   shift, and go to state 79
    '.'   shift, and go to state 80


State 110

   55 case_branch: OBJECTID . ':' TYPEID DARROW expr ';'

    ':'  shift, and go to state 125


State 111

   34 expr: CASE expr OF case_list . ESAC
   53 case_list: case_list . case_branch
   54          | case_list . error ';'

    error     shift, and go to state 126
    ESAC      shift, and go to state 127
    OBJECTID  shift, and go to state 110

    case_branch  go to state 128


State 112

   52 case_list: case_branch .

    $default  reduce using rule 52 (case_list)


State 113

   29 expr: OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 29 (expr)


State 114

   25 expr_list_comma: expr_list_comma ',' . expr

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expr      go to state 129
    let_expr  go to state 56


State 115

   22 expr_list_semicolon: expr_list_semicolon ';' error .
   51 expr: error .

    '}'       reduce using rule 22 (expr_list_semicolon)
    '}'       [reduce using rule 51 (expr)]
    ';'       reduce using rule 22 (expr_list_semicolon)
    ';'       [reduce using rule 51 (expr)]
    $default  reduce using rule 51 (expr)


State 116

   21 expr_list_semicolon: expr_list_semicolon ';' expr .
   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    LE   shift, and go to state 72
    '<'  shift, and go to state 73
    '='  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '@'  shift, and go to state 79
    '.'  shift, and go to state 80

    $default  reduce using rule 21 (expr_list_semicolon)


State 117

   28 expr: expr '@' TYPEID '.' . OBJECTID '(' expr_list_comma ')'

    OBJECTID  shift, and go to state 130


State 118

   27 expr: expr '.' OBJECTID '(' . expr_list_comma ')'

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    ')'  reduce using rule 23 (expr_list_comma)
    ','  reduce using rule 23 (expr_list_comma)

    expr_list_comma  go to state 131
    expr             go to state 91
    let_expr         go to state 56


State 119

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}' . ';'

    ';'  shift, and go to state 132


State 120

   30 expr: IF expr THEN expr ELSE . expr FI

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expr      go to state 133
    let_expr  go to state 56


State 121

   56 let_expr: LET OBJECTID ':' TYPEID IN . expr

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expr      go to state 134
    let_expr  go to state 56


State 122

   57 let_expr: LET OBJECTID ':' TYPEID ASSIGN . expr IN expr
   59         | LET OBJECTID ':' TYPEID ASSIGN . expr ',' let_expr

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expr      go to state 135
    let_expr  go to state 56


State 123

   58 let_expr: LET OBJECTID ':' TYPEID ',' . let_expr

    LET  shift, and go to state 42

    let_expr  go to state 136


State 124

   31 expr: WHILE expr LOOP expr POOL .

    $default  reduce using rule 31 (expr)


State 125

   55 case_branch: OBJECTID ':' . TYPEID DARROW expr ';'

    TYPEID  shift, and go to state 137


State 126

   54 case_list: case_list error . ';'

    ';'  shift, and go to state 138


State 127

   34 expr: CASE expr OF case_list ESAC .

    $default  reduce using rule 34 (expr)


State 128

   53 case_list: case_list case_branch .

    $default  reduce using rule 53 (case_list)


State 129

   25 expr_list_comma: expr_list_comma ',' expr .
   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    LE   shift, and go to state 72
    '<'  shift, and go to state 73
    '='  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '@'  shift, and go to state 79
    '.'  shift, and go to state 80

    $default  reduce using rule 25 (expr_list_comma)


State 130

   28 expr: expr '@' TYPEID '.' OBJECTID . '(' expr_list_comma ')'

    '('  shift, and go to state 139


State 131

   25 expr_list_comma: expr_list_comma . ',' expr
   27 expr: expr '.' OBJECTID '(' expr_list_comma . ')'

    ')'  shift, and go to state 140
    ','  shift, and go to state 114


State 132

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}' ';' .

    $default  reduce using rule 10 (feature)


State 133

   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   30     | IF expr THEN expr ELSE expr . FI
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    FI   shift, and go to state 141
    LE   shift, and go to state 72
    '<'  shift, and go to state 73
    '='  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '@'  shift, and go to state 79
    '.'  shift, and go to state 80


State 134

   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr
   56 let_expr: LET OBJECTID ':' TYPEID IN expr .

    LE   shift, and go to state 72
    '<'  shift, and go to state 73
    '='  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '@'  shift, and go to state 79
    '.'  shift, and go to state 80

    LE        [reduce using rule 56 (let_expr)]
    '<'       [reduce using rule 56 (let_expr)]
    '='       [reduce using rule 56 (let_expr)]
    '+'       [reduce using rule 56 (let_expr)]
    '-'       [reduce using rule 56 (let_expr)]
    '*'       [reduce using rule 56 (let_expr)]
    '/'       [reduce using rule 56 (let_expr)]
    '@'       [reduce using rule 56 (let_expr)]
    '.'       [reduce using rule 56 (let_expr)]
    $default  reduce using rule 56 (let_expr)


State 135

   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr
   57 let_expr: LET OBJECTID ':' TYPEID ASSIGN expr . IN expr
   59         | LET OBJECTID ':' TYPEID ASSIGN expr . ',' let_expr

    IN   shift, and go to state 142
    LE   shift, and go to state 72
    '<'  shift, and go to state 73
    '='  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '@'  shift, and go to state 79
    '.'  shift, and go to state 80
    ','  shift, and go to state 143


State 136

   58 let_expr: LET OBJECTID ':' TYPEID ',' let_expr .

    $default  reduce using rule 58 (let_expr)


State 137

   55 case_branch: OBJECTID ':' TYPEID . DARROW expr ';'

    DARROW  shift, and go to state 144


State 138

   54 case_list: case_list error ';' .

    $default  reduce using rule 54 (case_list)


State 139

   28 expr: expr '@' TYPEID '.' OBJECTID '(' . expr_list_comma ')'

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    ')'  reduce using rule 23 (expr_list_comma)
    ','  reduce using rule 23 (expr_list_comma)

    expr_list_comma  go to state 145
    expr             go to state 91
    let_expr         go to state 56


State 140

   27 expr: expr '.' OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 27 (expr)


State 141

   30 expr: IF expr THEN expr ELSE expr FI .

    $default  reduce using rule 30 (expr)


State 142

   57 let_expr: LET OBJECTID ':' TYPEID ASSIGN expr IN . expr

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expr      go to state 146
    let_expr  go to state 56


State 143

   59 let_expr: LET OBJECTID ':' TYPEID ASSIGN expr ',' . let_expr

    LET  shift, and go to state 42

    let_expr  go to state 147


State 144

   55 case_branch: OBJECTID ':' TYPEID DARROW . expr ';'

    error       shift, and go to state 40
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expr      go to state 148
    let_expr  go to state 56


State 145

   25 expr_list_comma: expr_list_comma . ',' expr
   28 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma . ')'

    ')'  shift, and go to state 149
    ','  shift, and go to state 114


State 146

   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr
   57 let_expr: LET OBJECTID ':' TYPEID ASSIGN expr IN expr .

    LE   shift, and go to state 72
    '<'  shift, and go to state 73
    '='  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '@'  shift, and go to state 79
    '.'  shift, and go to state 80

    LE        [reduce using rule 57 (let_expr)]
    '<'       [reduce using rule 57 (let_expr)]
    '='       [reduce using rule 57 (let_expr)]
    '+'       [reduce using rule 57 (let_expr)]
    '-'       [reduce using rule 57 (let_expr)]
    '*'       [reduce using rule 57 (let_expr)]
    '/'       [reduce using rule 57 (let_expr)]
    '@'       [reduce using rule 57 (let_expr)]
    '.'       [reduce using rule 57 (let_expr)]
    $default  reduce using rule 57 (let_expr)


State 147

   59 let_expr: LET OBJECTID ':' TYPEID ASSIGN expr ',' let_expr .

    $default  reduce using rule 59 (let_expr)


State 148

   27 expr: expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr
   55 case_branch: OBJECTID ':' TYPEID DARROW expr . ';'

    LE   shift, and go to state 72
    '<'  shift, and go to state 73
    '='  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '@'  shift, and go to state 79
    '.'  shift, and go to state 80
    ';'  shift, and go to state 150


State 149

   28 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 28 (expr)


State 150

   55 case_branch: OBJECTID ':' TYPEID DARROW expr ';' .

    $default  reduce using rule 55 (case_branch)
